{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "eTIMS OSCU Integration API - Updated",
		"description": "Complete API collection for testing KRA eTIMS OSCU integration endpoints with real working data.\n\nThis collection includes:\n- Company onboarding workflow\n- Device registration with CMC key generation\n- Sales transaction processing with retry mechanism\n- API monitoring and logging\n- Complete end-to-end testing scenarios\n\nBase URL: http://localhost:8000\nAuthentication: Token adadec42f0aa4330b7df1392510ed347f0f72fd1\n\nWorking Test Data:\n- Company ID: 7c209984-2ead-41dd-866c-33bb1658a3cb\n- TIN: 98765432109\n- Device Serial: REAL009 (with CMC key)\n- Company: Test Company Ltd",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Health Check (No Auth)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Connection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{base_url}}/api/device/test-connection/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"device",
								"test-connection",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device Management",
			"item": [
				{
					"name": "Initialize Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has device_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('device_id');",
									"    pm.environment.set('device_id', jsonData.device_id);",
									"});",
									"",
									"pm.test(\"Device status is active\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql('active');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tin\": \"{{test_tin}}\",\n    \"bhf_id\": \"{{test_bhf_id}}\",\n    \"serial_number\": \"{{test_serial_number}}\",\n    \"device_name\": \"Test POS Terminal 1\",\n    \"pos_version\": \"2.1.0\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/device/init/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"device",
								"init",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Device Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/device/{{device_id}}/status/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"device",
								"{{device_id}}",
								"status",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sales Transactions",
			"item": [
				{
					"name": "Process Sales Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 or 202\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"pm.test(\"Response has invoice_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('invoice_id');",
									"    pm.environment.set('invoice_id', jsonData.invoice_id);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    pm.test(\"Transaction confirmed\", function () {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.status).to.eql('confirmed');",
									"        pm.expect(jsonData).to.have.property('receipt_no');",
									"    });",
									"} else if (pm.response.code === 202) {",
									"    pm.test(\"Transaction queued for retry\", function () {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.retry_queued).to.eql(true);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate unique invoice number",
									"const timestamp = Date.now();",
									"const invoiceNo = `INV-${timestamp}`;",
									"pm.environment.set('invoice_no', invoiceNo);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_serial_number\": \"{{test_serial_number}}\",\n    \"invoice_no\": \"{{invoice_no}}\",\n    \"tin\": \"{{test_tin}}\",\n    \"customer_tin\": \"12345678901\",\n    \"customer_name\": \"John Doe\",\n    \"payment_type\": \"CASH\",\n    \"transaction_date\": \"{{$isoTimestamp}}\",\n    \"currency\": \"KES\",\n    \"items\": [\n        {\n            \"item_code\": \"ITEM001\",\n            \"item_name\": \"Test Product 1\",\n            \"quantity\": 2,\n            \"unit_price\": 100.00,\n            \"tax_type\": \"A\",\n            \"tax_rate\": 16.0,\n            \"unit_of_measure\": \"PCS\"\n        },\n        {\n            \"item_code\": \"ITEM002\",\n            \"item_name\": \"Test Service 1\",\n            \"quantity\": 1,\n            \"unit_price\": 500.00,\n            \"tax_type\": \"A\",\n            \"tax_rate\": 16.0,\n            \"unit_of_measure\": \"PCS\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/sales/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sales",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Cash Sale (Simple)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_serial_number\": \"{{test_serial_number}}\",\n    \"invoice_no\": \"CASH-{{$timestamp}}\",\n    \"tin\": \"{{test_tin}}\",\n    \"payment_type\": \"CASH\",\n    \"transaction_date\": \"{{$isoTimestamp}}\",\n    \"items\": [\n        {\n            \"item_code\": \"CASH001\",\n            \"item_name\": \"Cash Sale Item\",\n            \"quantity\": 1,\n            \"unit_price\": 1000.00,\n            \"tax_type\": \"A\",\n            \"tax_rate\": 16.0,\n            \"unit_of_measure\": \"PCS\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/sales/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sales",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Card Payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_serial_number\": \"{{test_serial_number}}\",\n    \"invoice_no\": \"CARD-{{$timestamp}}\",\n    \"tin\": \"{{test_tin}}\",\n    \"customer_name\": \"Jane Smith\",\n    \"payment_type\": \"CARD\",\n    \"transaction_date\": \"{{$isoTimestamp}}\",\n    \"items\": [\n        {\n            \"item_code\": \"CARD001\",\n            \"item_name\": \"Premium Service\",\n            \"quantity\": 1,\n            \"unit_price\": 2500.00,\n            \"tax_type\": \"A\",\n            \"tax_rate\": 16.0,\n            \"unit_of_measure\": \"PCS\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/sales/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sales",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invoice Management",
			"item": [
				{
					"name": "List All Invoices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/invoices/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"invoices",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Invoices by Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/invoices/?status=confirmed",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"invoices",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "confirmed"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Invoices by Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/invoices/?device_id={{device_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"invoices",
								""
							],
							"query": [
								{
									"key": "device_id",
									"value": "{{device_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Invoices by Date Range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/invoices/?start_date=2024-01-01&end_date=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"invoices",
								""
							],
							"query": [
								{
									"key": "start_date",
									"value": "2024-01-01"
								},
								{
									"key": "end_date",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Item Management",
			"item": [
				{
					"name": "Sync Items with KRA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tin\": \"{{test_tin}}\",\n    \"bhf_id\": \"{{test_bhf_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/item/sync/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"item",
								"sync",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Monitoring & Logs",
			"item": [
				{
					"name": "View API Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logs/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Logs by Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logs/?device_id={{device_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs",
								""
							],
							"query": [
								{
									"key": "device_id",
									"value": "{{device_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Logs by Request Type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logs/?request_type=sales",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs",
								""
							],
							"query": [
								{
									"key": "request_type",
									"value": "sales"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Logs by Status Code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logs/?status_code=200",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logs",
								""
							],
							"query": [
								{
									"key": "status_code",
									"value": "200"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Scenarios",
			"item": [
				{
					"name": "Invalid Device Registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tin\": \"invalid\",\n    \"bhf_id\": \"001\",\n    \"serial_number\": \"TEST123\",\n    \"device_name\": \"Test Device\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/device/init/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"device",
								"init",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Sales with Invalid Device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_serial_number\": \"NONEXISTENT\",\n    \"invoice_no\": \"ERR-001\",\n    \"tin\": \"12345678901\",\n    \"payment_type\": \"CASH\",\n    \"transaction_date\": \"{{$isoTimestamp}}\",\n    \"items\": [\n        {\n            \"item_code\": \"ITEM001\",\n            \"item_name\": \"Test Item\",\n            \"quantity\": 1,\n            \"unit_price\": 100.00,\n            \"tax_type\": \"A\",\n            \"tax_rate\": 16.0,\n            \"unit_of_measure\": \"PCS\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/sales/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sales",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Sales with Missing Items",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_serial_number\": \"{{test_serial_number}}\",\n    \"invoice_no\": \"ERR-002\",\n    \"tin\": \"{{test_tin}}\",\n    \"payment_type\": \"CASH\",\n    \"transaction_date\": \"{{$isoTimestamp}}\",\n    \"items\": []\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/sales/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sales",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}",
					"",
					"// Set test credentials if not already set",
					"if (!pm.environment.get('test_tin')) {",
					"    pm.environment.set('test_tin', '12345678901');",
					"    pm.environment.set('test_bhf_id', '001');",
					"    pm.environment.set('test_serial_number', 'TEST-POS-001');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to check response time",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"// Global test to check for proper JSON response (except for health check)",
					"if (pm.request.url.toString().indexOf('/health/') === -1) {",
					"    pm.test('Response is valid JSON', function () {",
					"        pm.response.to.be.json;",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "your-auth-token-here",
			"type": "string"
		},
		{
			"key": "test_tin",
			"value": "12345678901",
			"type": "string"
		},
		{
			"key": "test_bhf_id",
			"value": "001",
			"type": "string"
		},
		{
			"key": "test_serial_number",
			"value": "TEST-POS-001",
			"type": "string"
		}
	]
}
