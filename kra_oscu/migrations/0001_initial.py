# Generated by Django 4.2.16 on 2025-10-09 12:02

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import kra_oscu.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('endpoint', models.CharField(help_text='KRA API endpoint called', max_length=200)),
                ('request_type', models.CharField(choices=[('init', 'Device Initialization'), ('sales', 'Sales Transaction'), ('item_sync', 'Item Synchronization'), ('status_check', 'Status Check'), ('codes', 'System Codes'), ('health_check', 'Health Check'), ('client_onboard', 'Client Onboarding')], help_text='Type of API request', max_length=20)),
                ('request_payload', models.TextField(help_text='Request sent to KRA (JSON/XML)')),
                ('response_payload', models.TextField(blank=True, help_text='Response from KRA')),
                ('status_code', models.PositiveIntegerField(help_text='HTTP status code')),
                ('response_time', models.DecimalField(decimal_places=3, help_text='Response time in seconds', max_digits=8)),
                ('error_message', models.TextField(blank=True, help_text='Error message if failed')),
                ('is_retry', models.BooleanField(default=False, help_text='Is this a retry attempt')),
                ('severity', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', help_text='Log severity level', max_length=10)),
                ('user_agent', models.CharField(blank=True, help_text='Client user agent', max_length=200)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Client IP address', null=True)),
                ('environment', models.CharField(default='sandbox', help_text='Environment (sandbox/production)', max_length=20)),
            ],
            options={
                'db_table': 'kra_api_logs',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(help_text='Business/Company name', max_length=200)),
                ('tin', models.CharField(help_text='Tax Identification Number (11 digits)', max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'TIN must be 11 digits')])),
                ('contact_person', models.CharField(help_text='Primary contact person', max_length=100)),
                ('contact_email', models.EmailField(help_text='Contact email address', max_length=254)),
                ('contact_phone', models.CharField(help_text='Contact phone number', max_length=20)),
                ('business_address', models.TextField(help_text='Physical business address')),
                ('business_type', models.CharField(blank=True, help_text='Type of business', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('pending_approval', 'Pending Approval')], default='pending_approval', max_length=20)),
                ('is_sandbox', models.BooleanField(default=True, help_text='Using sandbox environment')),
                ('onboarding_date', models.DateTimeField(auto_now_add=True)),
                ('subscription_plan', models.CharField(default='basic', help_text='Subscription plan', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'db_table': 'revpay_companies',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_type', models.CharField(choices=[('oscu', 'Online Sales Control Unit (OSCU)'), ('vscu', 'Virtual Sales Control Unit (VSCU)')], default='oscu', help_text='Type of eTIMS device (OSCU or VSCU)', max_length=10)),
                ('integration_type', models.CharField(choices=[('pos', 'Point of Sale System'), ('erp', 'Enterprise Resource Planning'), ('ecommerce', 'E-commerce Platform'), ('mobile_app', 'Mobile Application'), ('web_app', 'Web Application'), ('api_integration', 'Direct API Integration')], default='pos', help_text='Type of system being integrated', max_length=20)),
                ('tin', models.CharField(help_text='Tax Identification Number (11 digits)', max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'TIN must be 11 digits')])),
                ('bhf_id', models.CharField(help_text='Branch ID (3 digits, e.g., 001)', max_length=3, validators=[django.core.validators.RegexValidator('^\\d{3}$', 'Branch ID must be 3 digits')])),
                ('serial_number', models.CharField(help_text='Unique device serial number', max_length=50, unique=True)),
                ('virtual_device_id', models.CharField(blank=True, help_text='Virtual device identifier for VSCU integrations', max_length=50, null=True)),
                ('api_endpoint', models.URLField(blank=True, help_text='Custom API endpoint for VSCU integrations', null=True)),
                ('webhook_url', models.URLField(blank=True, help_text='Webhook URL for real-time notifications', null=True)),
                ('cmc_key_encrypted', models.TextField(blank=True, help_text='Encrypted Communication Key from KRA', null=True)),
                ('device_name', models.CharField(help_text='Friendly device name', max_length=100)),
                ('pos_version', models.CharField(blank=True, help_text='POS/System software version', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Registration'), ('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('failed', 'Registration Failed')], default='pending', max_length=20)),
                ('is_certified', models.BooleanField(default=False, help_text='KRA certification status')),
                ('last_sync', models.DateTimeField(blank=True, help_text='Last successful sync with KRA', null=True)),
                ('integrator_reference', models.CharField(blank=True, help_text='Revpay Connect internal reference for this integration', max_length=100)),
                ('client_system_info', models.JSONField(blank=True, default=dict, help_text='Client system information and configuration')),
                ('certification_date', models.DateTimeField(blank=True, help_text='Date when device was certified by KRA', null=True)),
                ('certification_expiry', models.DateTimeField(blank=True, help_text='Certification expiry date', null=True)),
                ('company', models.ForeignKey(help_text='Company that owns this device', on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='kra_oscu.company')),
            ],
            options={
                'db_table': 'kra_devices',
            },
            bases=(models.Model, kra_oscu.models.EncryptionMixin),
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_no', models.CharField(help_text='Internal invoice/receipt number', max_length=50)),
                ('receipt_no', models.CharField(blank=True, help_text='KRA receipt number (after successful submission)', max_length=50, null=True)),
                ('tin', models.CharField(help_text='Business TIN', max_length=11)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total invoice amount including tax', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, help_text='Total tax amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(default='KES', help_text='Currency code', max_length=3)),
                ('customer_tin', models.CharField(blank=True, help_text='Customer TIN (optional)', max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Customer TIN must be 11 digits')])),
                ('customer_name', models.CharField(blank=True, help_text='Customer name', max_length=200)),
                ('payment_type', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Credit/Debit Card'), ('MOBILE', 'Mobile Money'), ('BANK', 'Bank Transfer'), ('CREDIT', 'Credit Sale')], default='CASH', help_text='Payment method', max_length=10)),
                ('internal_data', models.TextField(blank=True, help_text='KRA internal data (encrypted)', null=True)),
                ('receipt_signature', models.TextField(blank=True, help_text='KRA receipt signature', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending KRA Submission'), ('sent', 'Sent to KRA'), ('confirmed', 'Confirmed by KRA'), ('failed', 'Failed Submission'), ('retry', 'In Retry Queue')], default='pending', max_length=20)),
                ('transaction_date', models.DateTimeField(help_text='Transaction timestamp')),
                ('retry_count', models.PositiveIntegerField(default=0, help_text='Number of retry attempts')),
                ('company', models.ForeignKey(help_text='Company that owns this invoice', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='kra_oscu.company')),
                ('device', models.ForeignKey(help_text='Device that generated this invoice', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='kra_oscu.device')),
            ],
            options={
                'db_table': 'kra_invoices',
            },
        ),
        migrations.CreateModel(
            name='SystemCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code_type', models.CharField(choices=[('tax_type', 'Tax Types'), ('payment_type', 'Payment Types'), ('unit_measure', 'Units of Measure'), ('currency', 'Currency Codes'), ('item_category', 'Item Categories')], help_text='Type of system code', max_length=20)),
                ('code_value', models.CharField(help_text='Code value', max_length=50)),
                ('description', models.CharField(help_text='Code description', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Code is active')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Last update from KRA')),
            ],
            options={
                'db_table': 'kra_system_codes',
                'indexes': [models.Index(fields=['code_type', 'is_active'], name='kra_system__code_ty_3070a5_idx')],
                'unique_together': {('code_type', 'code_value')},
            },
        ),
        migrations.CreateModel(
            name='RetryQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task_type', models.CharField(choices=[('sales_retry', 'Sales Transaction Retry'), ('status_check', 'Status Check Retry'), ('item_sync', 'Item Sync Retry')], help_text='Type of retry task', max_length=20)),
                ('attempt_count', models.PositiveIntegerField(default=0, help_text='Number of attempts made')),
                ('next_retry', models.DateTimeField(help_text='Next retry attempt time')),
                ('error_details', models.TextField(help_text='Last error details')),
                ('status', models.CharField(choices=[('pending', 'Pending Processing'), ('processing', 'Currently Processing'), ('completed', 'Successfully Completed'), ('failed', 'Permanently Failed')], default='pending', max_length=20)),
                ('invoice', models.ForeignKey(help_text='Invoice to retry', on_delete=django.db.models.deletion.CASCADE, related_name='retry_attempts', to='kra_oscu.invoice')),
            ],
            options={
                'db_table': 'kra_retry_queue',
            },
        ),
        migrations.CreateModel(
            name='PartnershipAgreement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner_name', models.CharField(help_text='Partner company name', max_length=200)),
                ('partnership_type', models.CharField(choices=[('technology', 'Technology Integration Partner'), ('reseller', 'Reseller Partner'), ('referral', 'Referral Partner'), ('white_label', 'White Label Partner'), ('system_integrator', 'System Integrator Partner')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft Agreement'), ('under_review', 'Under Review'), ('active', 'Active'), ('suspended', 'Suspended'), ('terminated', 'Terminated'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('partner_contact_person', models.CharField(max_length=100)),
                ('partner_email', models.EmailField(max_length=254)),
                ('partner_phone', models.CharField(blank=True, max_length=20)),
                ('agreement_start_date', models.DateField()),
                ('agreement_end_date', models.DateField(blank=True, null=True)),
                ('auto_renewal', models.BooleanField(default=False)),
                ('revenue_share_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Revenue sharing percentage for partner', max_digits=5, null=True)),
                ('minimum_monthly_volume', models.PositiveIntegerField(blank=True, help_text='Minimum monthly transaction volume commitment', null=True)),
                ('exclusive_territories', models.JSONField(blank=True, default=list, help_text='Exclusive territories or market segments')),
                ('api_access_level', models.CharField(choices=[('basic', 'Basic API Access'), ('advanced', 'Advanced API Access'), ('full', 'Full Platform Access')], default='basic', max_length=20)),
                ('white_label_branding', models.BooleanField(default=False, help_text='Allow partner to use their own branding')),
                ('total_clients_referred', models.PositiveIntegerField(default=0)),
                ('total_revenue_generated', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('last_activity_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partnership_agreements',
                'indexes': [models.Index(fields=['partnership_type'], name='partnership_partner_edd469_idx'), models.Index(fields=['status'], name='partnership_status_e4b9cc_idx'), models.Index(fields=['agreement_end_date'], name='partnership_agreeme_bea938_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('webhook', 'Webhook'), ('system', 'System Alert')], max_length=20)),
                ('recipient', models.CharField(help_text='Email, phone, or webhook URL', max_length=255)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20)),
                ('template_used', models.CharField(blank=True, max_length=100)),
                ('delivery_attempts', models.PositiveIntegerField(default=0)),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('company', models.ForeignKey(blank=True, help_text='Company this notification relates to (null for system notifications)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='kra_oscu.company')),
            ],
            options={
                'db_table': 'notification_logs',
            },
        ),
        migrations.CreateModel(
            name='ItemMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_code', models.CharField(help_text='KRA standardized item code', max_length=50, unique=True)),
                ('item_name', models.CharField(help_text='Item/product name', max_length=200)),
                ('item_type', models.CharField(blank=True, help_text='Item category/type', max_length=50)),
                ('tax_type', models.CharField(choices=[('A', 'VAT Standard Rate (16%)'), ('B', 'VAT Reduced Rate (8%)'), ('C', 'VAT Zero Rate (0%)'), ('D', 'VAT Exempt'), ('E', 'Special Tax')], help_text='KRA tax classification', max_length=1)),
                ('default_price', models.DecimalField(blank=True, decimal_places=2, help_text='Default selling price', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unit_of_measure', models.CharField(help_text='Unit of measure (e.g., PCS, KG)', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Item description')),
                ('category', models.CharField(blank=True, help_text='Product category', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Item is available for sale')),
            ],
            options={
                'db_table': 'kra_item_master',
                'indexes': [models.Index(fields=['item_code'], name='kra_item_ma_item_co_55aa2f_idx'), models.Index(fields=['tax_type'], name='kra_item_ma_tax_typ_a43923_idx'), models.Index(fields=['is_active'], name='kra_item_ma_is_acti_c0cde1_idx')],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_code', models.CharField(help_text='KRA item code', max_length=50)),
                ('item_name', models.CharField(help_text='Item name', max_length=200)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Item quantity', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Unit price before tax', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total line amount before tax', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_type', models.CharField(choices=[('A', 'VAT Standard Rate (16%)'), ('B', 'VAT Reduced Rate (8%)'), ('C', 'VAT Zero Rate (0%)'), ('D', 'VAT Exempt'), ('E', 'Special Tax')], help_text='KRA tax classification', max_length=1)),
                ('tax_rate', models.DecimalField(decimal_places=2, help_text='Tax rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, help_text='Tax amount for this line', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unit_of_measure', models.CharField(help_text='Unit of measure', max_length=20)),
                ('invoice', models.ForeignKey(help_text='Parent invoice', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='kra_oscu.invoice')),
            ],
            options={
                'db_table': 'kra_invoice_items',
            },
        ),
        migrations.CreateModel(
            name='IntegratorCertification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('certification_type', models.CharField(choices=[('oscu', 'OSCU Integrator Certification'), ('vscu', 'VSCU Integrator Certification'), ('combined', 'Combined OSCU/VSCU Certification')], help_text='Type of integrator certification', max_length=20)),
                ('certification_id', models.CharField(help_text='KRA-issued certification identifier', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Application'), ('under_review', 'Under KRA Review'), ('approved', 'Approved'), ('active', 'Active'), ('suspended', 'Suspended'), ('expired', 'Expired'), ('revoked', 'Revoked')], default='pending', max_length=20)),
                ('issued_date', models.DateTimeField(blank=True, help_text='Date certification was issued by KRA', null=True)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Certification expiry date', null=True)),
                ('renewal_date', models.DateTimeField(blank=True, help_text='Next renewal date', null=True)),
                ('kra_officer', models.CharField(blank=True, help_text='KRA officer who issued certification', max_length=100)),
                ('kra_reference', models.CharField(blank=True, help_text='KRA internal reference number', max_length=100)),
                ('max_clients', models.PositiveIntegerField(blank=True, help_text='Maximum number of clients allowed under this certification', null=True)),
                ('max_transactions_per_month', models.PositiveIntegerField(blank=True, help_text='Maximum transactions per month', null=True)),
                ('allowed_business_types', models.JSONField(blank=True, default=list, help_text='List of business types allowed under this certification')),
                ('compliance_requirements', models.JSONField(blank=True, default=dict, help_text='Specific compliance requirements for this certification')),
                ('last_audit_date', models.DateTimeField(blank=True, help_text='Date of last KRA audit', null=True)),
                ('next_audit_date', models.DateTimeField(blank=True, help_text='Scheduled next audit date', null=True)),
                ('certification_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Certification fee paid to KRA', max_digits=10, null=True)),
                ('annual_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Annual maintenance fee', max_digits=10, null=True)),
                ('revenue_sharing_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Revenue sharing percentage with KRA (if applicable)', max_digits=5, null=True)),
            ],
            options={
                'db_table': 'integrator_certifications',
                'indexes': [models.Index(fields=['certification_type'], name='integrator__certifi_bbcb1e_idx'), models.Index(fields=['status'], name='integrator__status_6be579_idx'), models.Index(fields=['expiry_date'], name='integrator__expiry__b4e339_idx'), models.Index(fields=['certification_id'], name='integrator__certifi_1b0bdd_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('quarterly', 'Quarterly Report')], help_text='Type of compliance report', max_length=20)),
                ('period_start', models.DateTimeField(help_text='Report period start')),
                ('period_end', models.DateTimeField(help_text='Report period end')),
                ('total_invoices', models.PositiveIntegerField(default=0, help_text='Total invoices processed')),
                ('successful_invoices', models.PositiveIntegerField(default=0, help_text='Successfully transmitted invoices')),
                ('failed_invoices', models.PositiveIntegerField(default=0, help_text='Failed invoice transmissions')),
                ('total_value', models.DecimalField(decimal_places=2, default=0, help_text='Total transaction value', max_digits=15)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0, help_text='Total tax collected', max_digits=15)),
                ('kra_acknowledgments', models.PositiveIntegerField(default=0, help_text='KRA acknowledgments received')),
                ('detailed_data', models.JSONField(default=dict, help_text='Detailed report data in JSON format')),
                ('company', models.ForeignKey(help_text='Company for this report', on_delete=django.db.models.deletion.CASCADE, related_name='compliance_reports', to='kra_oscu.company')),
            ],
            options={
                'db_table': 'revpay_compliance_reports',
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['tin'], name='revpay_comp_tin_1207e7_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['status'], name='revpay_comp_status_4ac101_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['contact_email'], name='revpay_comp_contact_bdc77f_idx'),
        ),
        migrations.AddField(
            model_name='apilog',
            name='company',
            field=models.ForeignKey(blank=True, help_text='Company associated with this log', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_logs', to='kra_oscu.company'),
        ),
        migrations.AddField(
            model_name='apilog',
            name='device',
            field=models.ForeignKey(blank=True, help_text='Device that made the request', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_logs', to='kra_oscu.device'),
        ),
        migrations.AddIndex(
            model_name='retryqueue',
            index=models.Index(fields=['status', 'next_retry'], name='kra_retry_q_status_0e127c_idx'),
        ),
        migrations.AddIndex(
            model_name='retryqueue',
            index=models.Index(fields=['invoice'], name='kra_retry_q_invoice_29b14f_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['company'], name='notificatio_company_131329_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_0cc56e_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['status'], name='notificatio_status_95b675_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['created_at'], name='notificatio_created_45a1e0_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['invoice'], name='kra_invoice_invoice_46172d_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['item_code'], name='kra_invoice_item_co_85164f_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['device', 'transaction_date'], name='kra_invoice_device__2eb8e9_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='kra_invoice_status_b5cd32_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['receipt_no'], name='kra_invoice_receipt_be7361_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['tin'], name='kra_invoice_tin_29dd84_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('device', 'invoice_no')},
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['company'], name='kra_devices_company_56f87f_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['tin', 'bhf_id'], name='kra_devices_tin_07135f_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['status'], name='kra_devices_status_715d36_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['serial_number'], name='kra_devices_serial__97a201_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['device_type'], name='kra_devices_device__baddd9_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['integration_type'], name='kra_devices_integra_bf3adc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='device',
            unique_together={('company', 'tin', 'bhf_id', 'serial_number')},
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['company', 'report_type'], name='revpay_comp_company_fd50d7_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancereport',
            index=models.Index(fields=['period_start', 'period_end'], name='revpay_comp_period__55fae4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='compliancereport',
            unique_together={('company', 'report_type', 'period_start')},
        ),
        migrations.AddIndex(
            model_name='apilog',
            index=models.Index(fields=['company', 'created_at'], name='kra_api_log_company_b8dfae_idx'),
        ),
        migrations.AddIndex(
            model_name='apilog',
            index=models.Index(fields=['device', 'created_at'], name='kra_api_log_device__2b529b_idx'),
        ),
        migrations.AddIndex(
            model_name='apilog',
            index=models.Index(fields=['request_type'], name='kra_api_log_request_76745d_idx'),
        ),
        migrations.AddIndex(
            model_name='apilog',
            index=models.Index(fields=['status_code'], name='kra_api_log_status__2f1ca8_idx'),
        ),
        migrations.AddIndex(
            model_name='apilog',
            index=models.Index(fields=['severity'], name='kra_api_log_severit_69019f_idx'),
        ),
        migrations.AddIndex(
            model_name='apilog',
            index=models.Index(fields=['environment'], name='kra_api_log_environ_0d4d3d_idx'),
        ),
        migrations.AddIndex(
            model_name='apilog',
            index=models.Index(fields=['created_at'], name='kra_api_log_created_7f4f8a_idx'),
        ),
    ]
